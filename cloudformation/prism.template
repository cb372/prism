{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Prism - service discovery",
  "Parameters": {
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to the instance",
      "Type": "String",
      "Default": "composer-team"
    },
    "Stage": {
      "Description": "Environment name",
      "Type": "String",
      "AllowedValues": [
        "INFRA"
      ]
    },
    "VpcId": {
      "Description": "ID of the VPC onto which to launch the application eg. vpc-1234abcd",
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-381fa95d"
    },
    "PrivateVpcSubnets": {
      "Description": "Subnets to use in VPC for private EC2 instances eg. subnet-abcd1234",
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Default": "subnet-c2620fa7,subnet-2a37bd5d,subnet-2967c870"
    },
    "MachineImageAMI": {
      "Description": "AMI from machine-images repo",
      "Type": "String"
    }
  },
  "Mappings" : {
      "EnvironmentMap": {
          "CODE": { "lowercase": "code" },
          "PROD": { "lowercase": "prod" }
      }
  },
  "Resources": {
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/"
      }
    },
    "DescribeEC2Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "DescribeEC2Policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": ["EC2:Describe*"],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "Roles": [{"Ref": "Role"}]
      }
    },
    "GetDistributablesPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "GetDistributablesPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["s3:GetObject"],
              "Resource": ["arn:aws:s3:::deploytools-dist/*"]
            }
          ]
        },
        "Roles": [{"Ref": "Role"}]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "Role"}]
      }
    },
    "SSHSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH access from the office",
        "VpcId": {"Ref": "VpcId"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "10.249.0.0/16"
          }
        ]
      }
    },
    "AppServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "application servers",
        "VpcId": {"Ref": "VpcId"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 9000,
            "ToPort": 9000,
            "CidrIp": "10.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 9000,
            "ToPort": 9000,
            "SourceSecurityGroupId": {"Ref": "LoadBalancerSecurityGroup"}
          }
        ]
      }
    },
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "load balancer",
        "VpcId": {"Ref": "VpcId"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "CrossZone": true,
        "Subnets": {"Ref": "PrivateVpcSubnets"},
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "9000",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "HTTP:9000/management/healthcheck",
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "2",
          "Interval": "10",
          "Timeout": "5"
        },
        "Tags": [
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          },
          {
            "Key": "Stack",
            "Value": "deploy"
          },
          {
            "Key": "App",
            "Value": "prism"
          }
        ]
      }
    },
    "AutoscalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {"Fn::GetAZs": ""},
        "VPCZoneIdentifier": {"Ref": "PrivateVpcSubnets"},
        "LaunchConfigurationName": {"Ref": "LaunchConfig"},
        "MinSize": "1",
        "MaxSize": "2",
        "DesiredCapacity": "1",
        "HealthCheckType": "ELB",
        "HealthCheckGracePeriod": 300,
        "LoadBalancerNames": [{"Ref": "LoadBalancer"}],
        "Tags": [
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Stack",
            "Value": "flexible",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "App",
            "Value": "snapshotter",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {"Ref": "KeyName"},
        "ImageId": {"Ref": "MachineImageAMI"},
        "SecurityGroups": [
          {"Ref": "AppServerSecurityGroup"},
          {"Ref": "SSHSecurityGroup"}
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {"Ref": "InstanceProfile"},
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ev\n",
                "/opt/features/native-packager/install.sh -b deploytools-dist -s -t tgz\n"
              ]
            ]
          }
        }
      }
    }
  }
}
